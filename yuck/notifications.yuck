
(defwidget notification []
  (revealer
    :reveal {arraylength(notifications.popups) > 0 && !revealsearch && revealbar <= 1}
    :transition "slideright"
    ; (box
    ;   :class "notiborder ${arraylength(notifications.popups) > 0 ? 'active' : 'inactive' }"
      (notiflayout 
        :noti {arraylength(notifications.popups) > 0 
               ? notifications.popups[0]
               : '{
                   "id": -727, 
                   "app": "",
                   "summary": "",
                   "body": "",
                   "time": "07:27",
                   "actions": [],
                   "icon": null,
                   "image": null, 
                   "tleft": 0}'})))

(defvar revealnotiactions false)
(defvar notificationanimmap "[]")
(defwidget notiflayout [noti] 
  (eventbox
    ; :onclick "./scripts/notifmanage.sh --close ${noti.id}"
    :onhover "${EWW_CMD} update revealnotiactions=true"
    :onhoverlost "${EWW_CMD} update revealnotiactions=false"
    :tooltip "${noti.time}"
    :hexpand true
    (box 
      :orientation "h"
      :space-evenly false
      :class "widget"
      :width {barwidth - 50} 
      (box
        :class "notifimg"
        :visible {noti.image != "null"}
        :width 30
        :height 20
        :style "
          margin: -5px;
          margin-right: 5px;
          background-image: url('${
          noti.image != "null" ? noti.image : ""
          }');")
      (stack
        :selected {revealnotiactions ? 1 : 0}
        :transition "slidedown"
        :hexpand true
        (scroll 
          :hexpand true 
          :hscroll true
          (box
            :orientation "h"
            :space-evenly false
            :spacing 10
            (label
              :visible {noti.summary != "null"}
              :truncate true
              :markup "<b>${replace(noti.summary, '\\n', '  ')}</b>")
            (label 
              :visible {noti.body != "null"}
              :truncate true
              :markup {replace(noti.body, '\\n', '  ')})))
        ;; ostrich algorithm
        (box
          :orientation "h"
          :space-evenly false 
          :spacing 10
          :hexpand true
          (box
            :orientation "h"
            :space-evenly false
            :spacing 10
            (for action in {noti.actions}
              (eventbox
                :cursor "pointer"
                :onclick "./scripts/notifmanage.sh --action ${noti.id} ${action[0]} 
                         && ./scripts/notifmanage.sh --close ${noti.id}"
                (label 
                  :text {action[1]}))))
          (eventbox 
            :cursor "pointer"
            :onclick "./scripts/notifmanage.sh --close ${noti.id} && ${EWW_CMD} update revealnotiactions=false"
            (label 
              :text "Close")))))))

(defwidget notiflog [] 
  (overlay
    (box 
      :orientation "v"
      :space-evenly false 
      :hexpand true
      :vexpand true
      (scroll
        :vscroll true
        :hexpand true 
        :vexpand true
        (box 
          :hexpand true
          :orientation "v"
          :space-evenly false
          (for noti in {notifications.notifications}
            (loggednoti 
              :noti noti)))))
    (label 
      :style "transition: 500ms; opacity: ${arraylength(notifications.notifications) == 0 ? 1 : 0};"
      :text "No notifications.")))

(defwidget loggednoti [noti] 
  (revealer
    :reveal {jq(notificationanimmap, "any(. == ${noti.id})") == 'true'}
    :transition "slidedown"
  ; (scroll 
  ;   :hscroll true 
  ;   :vscroll false 
  ;   :class "cubictransition"
  ;   :style "min-width: ${jq(notificationanimmap, "any(. == ${noti.id})") == 'true' ? '336px' : '0px'};"
  ;   :halign "end"
    (box 
      :class "widget loggednoti"
      :style "transition: opacity 500ms; opacity: ${jq(notificationanimmap, "any(. == ${noti.id})") == 'true' ? 1 : 0};"
      :orientation "h"
      :space-evenly false 
      :hexpand true
      :width 336
      (box 
        :width 60 
        :height 60 
        :vexpand false
        :valign "start"
        :visible {noti.image != "null"}
        :class "image"
        :style "background-image: url('${noti.image}')") 
      (box 
        :tooltip {noti.time}
        :orientation "v"
        :space-evenly false
        :hexpand true
        :style "margin-left: 5px;"
        (box 
          :orientation "h"
          :space-evenly false 
          (scroll
            :hexpand true
            :hscroll true
            :vscroll false
            (label 
              :hexpand true 
              :xalign 0 
              :markup "<span weight='bold'>${noti.summary}</span>"))
          (eventbox 
            :cursor "pointer"
            (button
              :timeout "2s"
              :onclick "${EWW_CMD} update notificationanimmap=${jq(notificationanimmap, 'del(.[] | select(.==${noti.id}))')} && sleep 0.5 && ./scripts/notifmanage.sh --close ${noti.id}"
              (image
                :path "./assets/icons/x.svg"
                :image-width 25))))
        (scroll 
          :hexpand true 
          :hscroll true 
          :vscroll false
          (label 
            :xalign 0 
            :text {noti.body}))
        (box 
          :orientation "h"
          :style "margin-top: 5px;"
          (for action in {noti.actions}
            (eventbox
              :cursor "pointer"
              :timeout "2s"
              :onclick "./scripts/notifmanage.sh --action ${noti.id} ${action[0]} && ${EWW_CMD} update notificationanimmap=${jq(notificationanimmap, 'del(.[] | select(.==${noti.id}))')} && sleep 0.5 && ./scripts/notifmanage.sh --close ${noti.id}"
              :hexpand true 
              (box 
                ; :class "widget"
                (scroll 
                  :hexpand true 
                  :hscroll true 
                  :vscroll false 
                  (label 
                    :text {action[1]}))))))))))
      
