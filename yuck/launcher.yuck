
(defwindow launcher 
  :geometry (geometry 
              :x "0%"
              :y -50
              :width 0
              :height 0
              :anchor "top center")
              
  :stacking "overlay"
  :exclusive false
  :monitor 0
  :focusable true
  :wm-ignore false
  (minbarstruct))

(defwidget minbarstruct [] 
  (box
    :class "barbg customslide"
    :orientation "h"
    :halign "center"
    :space-evenly false
    (search)
    (revealer 
      :reveal {(arraylength(notifications.popups) == 0 && !revealsearch) || revealbar == 2}
      :transition "slideright"
      (centerbox 
        :valign "start"
        :width {barwidth - 50}
        (left)
        (middle)
        (right)))))

(defwidget search [] 
  (overlay
    (box
      :orientation "h"
      :space-evenly false
      :class "cubictransition"
      :style "
      min-height: ${revealbar == 2 ? 160 : 40}px;
      min-width: ${revealbar == 2 ? 160 : 40}px;"
      (box 
        :width 40)
      (revealer 
        :reveal revealsearch
        :transition "slideright"
        (box 
          :width {barwidth -50})))
    (box 
      :orientation "h"
      :space-evenly false

      (box
        :space-evenly false
        :orientation "h"
        :class "widget"
        :valign "start"
        :style "transition: 600ms; 
               ${revealbar == 2 ? 'border-radius: 50%; padding: 10px;' : ''}"
        (eventbox
          :cursor "pointer"
          :onclick "${EWW_CMD} update revealbar=${revealbar == 1 ? 2 : 1} ${revealbar == 2 ? 'ricon=0' : ''}"
          (overlay
            (box 
              :class "cubictransition"
              :style "
              min-width: ${revealbar == 2 ? 130 : 20}px;
              min-height: ${revealbar == 2 ? 130 : 20}px;
              ")
            (image
              :halign "center"
              :valign "center"
              :class "ricon ${revealbar == 2 || riconmode == 2 ? 'discmode' : 'normal'}"
              :path {revealbar == 2 ? pcover : './assets/void.svg'}
              :image-width {revealbar == 2 ? 130 : 20}
              :image-height {revealbar == 2 ? 130 : 20}
              :style "
                animation-play-state: ${playerctl.status == 'Playing' ? 'running' : 'paused'};
                -gtk-icon-transform: rotate(${ricon}deg);
                animation-duration: ${(-24 / 19) * speenspeed + 25 + (24 / 19) }s;
                ")

            (box 
              :halign "center"
              :valign "center"
              :class "cdisc"
              :style "
                min-height: ${revealbar == 2 ? 40 : 0}px;
                min-width: ${revealbar == 2 ? 40 : 0}px;
                opacity: ${revealbar == 2 ? 1 : 0};
                "
              (box 
                :halign "center"
                :valign "center"
                :class "ccdisc"
                :style "
                  min-height: ${revealbar == 2 ? 10 : 0}px;
                  min-width: ${revealbar == 2 ? 10 : 0}px;
                  opacity: ${revealbar == 2 ? 1 : 0};
                "))))
        (scroll 
          :hscroll true
          :style "
          transition: 500ms;
          min-width: ${revealsearch ? 160 : 0}px;"
          (input
            :onchange "./scripts/apps.py --query '{}' & ${EWW_CMD} update ricon=$(expr length \"{}\" \\* 10 + 360) &"
            :onaccept "
            ${ arraylength(appsjson.apps) > 0 ? "(cd && ${appsjson.apps[0].desktop}) & ./scripts/apps.py --increase '${appsjson.apps[0].name}' &" : ''}
            ./bin/launcher.sh close &"
            :hexpand true)))
      (scroll 
        :hscroll true 
        :hexpand true 
        :style "transition: 500ms; opacity: ${revealsearch ? 1 : 0};"
        (box
          :orientation "h"
          :space-evenly false
          (for a in {appsjson.apps}
            (app :a a)))))))

(defwidget app [a]
  (eventbox
    ; :onclick "(cd && ${a.desktop}) & ./scripts/apps.py --increase '${a.name}' & ./bin/launcher.sh close &"
    (box 
      :orientation "h"
      :space-evenly false
      :spacing 10
      :class "app"
      (image 
        :visible {a.icon != "null"}
        :image-width 20 
        :style "margin: -5px;"
        :path {a.icon != "null" ? a.icon : "./assets/void.svg"})
      (label 
        :text {a.name}))))
      
        
