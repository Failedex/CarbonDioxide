
(deflisten pcover "./scripts/pollcover.py")
(deflisten playerctl :initial '{"song": "", "artist": "", "status": "Stopped", "source": ""}' "playerctl metadata --format '{\"song\": \"{{title}}\",\"artist\": \"{{artist}}\", \"status\": \"{{status}}\", \"source\": \"{{playerName}}\"}' -F")
(defvar revealmediactl false)
(deflisten pposition :initial '{"position": 0, "duration": 100, "display": "--/--"}' "playerctl metadata -f '{\"position\": {{position / 1000000}}, \"duration\": {{mpris:length / 1000000}}, \"display\": \"{{duration(position)}}/{{duration(mpris:length)}}\"}' -F")

(defwidget mediapill [] 
  (eventbox
    :onhover "${EWW_CMD} update revealmediactl=true"
    :onhoverlost "${EWW_CMD} update revealmediactl=false"
    (box 
      :class "widget"
      :orientation "h"
      :space-evenly false
      :height 40
      :halign "center"
      (box 
        :class "covercirc"
        :visible {pcover != ""}
        :width 30 
        :height 20 
        :style "background-image: url(\"${pcover ?: './assets/void.svg'}\");")
      (box 
        :orientation "h"
        :space-evenly false
        (label 
          :truncate true 
          :style "margin: 0 5px;"
          :text {playerctl.song ?: "..."})
        (revealer
          :reveal revealmediactl
          :transition "slideright"
          (box
            :orientation "h"
            :spacing 5
            (eventbox
              :cursor "pointer"
              :onclick "playerctl previous"
              (image 
                :image-width 20
                :path "./assets/icons/skip-back.svg"))
            (eventbox
              :cursor "pointer"
              :onclick "playerctl play-pause"
              (image 
                :image-width 20
                :path "./assets/icons/${playerctl.status == 'Playing' ? 'pause' : 'play'}.svg"))
            (eventbox
              :cursor "pointer"
              :onclick "playerctl next"
              (image 
                :image-width 20
                :path "./assets/icons/skip-forward.svg"))))))))

(defwidget mediapill2 [] 
  (eventbox
    :onhover "${EWW_CMD} update revealmediactl=true"
    :onhoverlost "${EWW_CMD} update revealmediactl=false"
    (box 
      :class "coverpill"
      :orientation "h"
      :space-evenly false 
      :height 40
      :halign "center"
      :style {pcover ? "background-image: url(\"${pcover}\");" : ""})))
      

(defwidget mediadiscside [] 
  (box 
    :orientation "v"
    :space-evenly false
    :width 250
    (mlabel 
      :icon "./assets/icons/music.svg"
      :markup "${playerctl.song == '' ? 'Nothing playing' : playerctl.song}")
    (mlabel 
      :icon "./assets/icons/user.svg"
      :markup "${playerctl.artist == '' ? 'Unknown artist' : playerctl.artist}")
    ; (box
    ;   :orientation "h"
    ;   :vexpand true
    ;   :hexpand true
    ;   :space-evenly false)
    (scale 
      :orientation "h"
      :class "mline"
      :vexpand true
      :hexpand true
      :value {pposition.position}
      :min 0 
      :max {pposition.duration}
      :tooltip {pposition.display})
      ; :onchange "playerctl position {}")
      ; (label 
      ;   :text {pposition.display}))
    (box 
      :orientation "h"
      :space-evenly false
      (mlabel 
        :icon "./assets/icons/globe.svg"
        :markup {playerctl.source})
      (box 
        :class "widget maxr"
        :orientation "h"
        :height 45
        :width 100
        (eventbox
          :cursor "pointer"
          :onclick "playerctl previous"
          (image 
            :image-width 20
            :path "./assets/icons/skip-back.svg"))
        (eventbox
          :cursor "pointer"
          :onclick "playerctl play-pause"
          (image 
            :image-width 20
            :path "./assets/icons/${playerctl.status == 'Playing' ? 'pause' : 'play'}.svg"))
        (eventbox
          :cursor "pointer"
          :onclick "playerctl next"
          (image 
            :image-width 20
            :path "./assets/icons/skip-forward.svg")))))) 


(defwidget mlabel [icon markup]
  (box 
    :orientation "h"
    :space-evenly false 
    :class "mlabel"
    :hexpand true
    (box
      :class "iconlabel"
      (image 
        :image-width 25
        :path icon))
    (scroll 
      :hscroll true
      :hexpand true
      :height 30
      (label 
        :style "margin: 5px 5px;"
        :halign "center"
        :markup markup))))
