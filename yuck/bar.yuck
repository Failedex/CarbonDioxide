
(deflisten ricon :initial 0 "./scripts/ricon.py")
(defvar revealsearch false)
(defvar revealdash false)
; (defvar ricon 0)

(defwindow bar 
  :geometry (geometry 
              :x "0%"
              :y "0%"
              :width "100%"
              :height 0
              :anchor "top center")
              
  :stacking "bottom"
  :exclusive true
  :monitor 0
  :wm-ignore false
  (barstruct))

(defwidget barstruct []
  ; (box
  ;   :class "boxborder"
  ;   :style {arraylength(notifications.popups) > 0 ? "animation: gradanim 2s linear infinite; padding: 3px; padding-top: 0px;" : "padding: 0px; padding-top: 0px;"}
    ; :halign "center"
    (revealer 
      :reveal {revealbar == 1 && !overview}
      :transition "slidedown"
      (box
        ; :style "background-color: transparent;"
        :class "barbg"
        ; :style "transition: 100ms margin; margin: ${test ? 3 : 0}px; margin-top: 0px;"
        :orientation "h"
        :height 50
        :halign "center"
        :space-evenly false
        (search)
        (box 
          :orientation "h"
          :space-evenly false
          (notification)
          (revealer 
            :reveal {arraylength(notifications.popups) == 0 && !revealsearch}
            :transition "slideright"
            (box
              :orientation "v"
              :space-evenly false
              (revealer 
                :reveal revealdash
                :transition "slidedown"
                (dashboard))
              (revealer
                :reveal {!revealdash}
                :transition "slideup"
                (centerbox 
                  :width 950
                  (left)
                  (middle)
                  (right)))))))))

(defwidget left [] 
  (box 
    :orientation "h"
    :space-evenly false
    :halign "start"
    (workspace)
    (spos)
    (keepopen)))

(defwidget middle [] 
  (box 
    :orientation "h"
    :space-evenly false
    :halign "center"
    (box
      :orientation "v"
      :space-evenly false
      (osd)
      (switcher))
    (box 
      :width 40)))

(defwidget right [] 
  (box 
    :orientation "h"
    :halign "end"
    :space-evenly false
    ; (stray)
    (battery)
    (clock)))

(defwidget keepopen [] 
  (label 
    :visible false 
    :text "${pcover} ${playerctl} ${notifications}"))
